// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.29.1
// source: chatgpt-services/proto/chatgpt.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatEndpoint int32

const (
	// 网页版
	ChatEndpoint_WEB ChatEndpoint = 0
	// QQ
	ChatEndpoint_QQ ChatEndpoint = 1
	// 微信公众号
	ChatEndpoint_WECHATOFFICAL ChatEndpoint = 2
	// 企业微信
	ChatEndpoint_WECOM ChatEndpoint = 3
	// 个人微信
	ChatEndpoint_WECHAT ChatEndpoint = 4
)

// Enum value maps for ChatEndpoint.
var (
	ChatEndpoint_name = map[int32]string{
		0: "WEB",
		1: "QQ",
		2: "WECHATOFFICAL",
		3: "WECOM",
		4: "WECHAT",
	}
	ChatEndpoint_value = map[string]int32{
		"WEB":           0,
		"QQ":            1,
		"WECHATOFFICAL": 2,
		"WECOM":         3,
		"WECHAT":        4,
	}
)

func (x ChatEndpoint) Enum() *ChatEndpoint {
	p := new(ChatEndpoint)
	*p = x
	return p
}

func (x ChatEndpoint) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatEndpoint) Descriptor() protoreflect.EnumDescriptor {
	return file_chatgpt_services_proto_chatgpt_proto_enumTypes[0].Descriptor()
}

func (ChatEndpoint) Type() protoreflect.EnumType {
	return &file_chatgpt_services_proto_chatgpt_proto_enumTypes[0]
}

func (x ChatEndpoint) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatEndpoint.Descriptor instead.
func (ChatEndpoint) EnumDescriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{0}
}

// 请求入参
type ChatCompletionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户消息
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// 消息来源
	Endpoint ChatEndpoint `protobuf:"varint,2,opt,name=endpoint,proto3,enum=chatgpt_service.ChatEndpoint" json:"endpoint,omitempty"`
	// 用户标识以及web消息id
	Id string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	// QQ或微信等群组id
	GroupId string `protobuf:"bytes,4,opt,name=group_id,proto3" json:"group_id,omitempty"`
	// 是否启用上下文
	EnableContext bool `protobuf:"varint,5,opt,name=enableContext,json=enable_context,proto3" json:"enableContext,omitempty"`
	// web消息的pid
	Pid string `protobuf:"bytes,6,opt,name=pid,json=p_id,proto3" json:"pid,omitempty"`
	// 企业id
	EnterpriseId string `protobuf:"bytes,7,opt,name=enterpriseId,json=enterprise_id,proto3" json:"enterpriseId,omitempty"`
	// 企业账户
	EndpointAccount string     `protobuf:"bytes,8,opt,name=endpointAccount,json=endpoint_account,proto3" json:"endpointAccount,omitempty"`
	ChatParam       *ChatParam `protobuf:"bytes,9,opt,name=chatParam,json=chat_param,proto3" json:"chatParam,omitempty"`
}

func (x *ChatCompletionReq) Reset() {
	*x = ChatCompletionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionReq) ProtoMessage() {}

func (x *ChatCompletionReq) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionReq.ProtoReflect.Descriptor instead.
func (*ChatCompletionReq) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{0}
}

func (x *ChatCompletionReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatCompletionReq) GetEndpoint() ChatEndpoint {
	if x != nil {
		return x.Endpoint
	}
	return ChatEndpoint_WEB
}

func (x *ChatCompletionReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatCompletionReq) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *ChatCompletionReq) GetEnableContext() bool {
	if x != nil {
		return x.EnableContext
	}
	return false
}

func (x *ChatCompletionReq) GetPid() string {
	if x != nil {
		return x.Pid
	}
	return ""
}

func (x *ChatCompletionReq) GetEnterpriseId() string {
	if x != nil {
		return x.EnterpriseId
	}
	return ""
}

func (x *ChatCompletionReq) GetEndpointAccount() string {
	if x != nil {
		return x.EndpointAccount
	}
	return ""
}

func (x *ChatCompletionReq) GetChatParam() *ChatParam {
	if x != nil {
		return x.ChatParam
	}
	return nil
}

type ChatParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Model             string  `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	MaxTokens         int32   `protobuf:"varint,2,opt,name=maxTokens,json=max_tokens,proto3" json:"maxTokens,omitempty"`
	Temperature       float32 `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`
	TopP              float32 `protobuf:"fixed32,4,opt,name=topP,json=top_p,proto3" json:"topP,omitempty"`
	PresencePenalty   float32 `protobuf:"fixed32,5,opt,name=presencePenalty,json=presence_penalty,proto3" json:"presencePenalty,omitempty"`
	FrequencyPenalty  float32 `protobuf:"fixed32,6,opt,name=frequencyPenalty,json=frequency_penalty,proto3" json:"frequencyPenalty,omitempty"`
	BotDesc           string  `protobuf:"bytes,7,opt,name=botDesc,json=bot_desc,proto3" json:"botDesc,omitempty"`
	ContextTTL        int32   `protobuf:"varint,8,opt,name=contextTTL,json=context_ttl,proto3" json:"contextTTL,omitempty"`
	ContextLen        int32   `protobuf:"varint,9,opt,name=contextLen,json=context_len,proto3" json:"contextLen,omitempty"`
	MinResponseTokens int32   `protobuf:"varint,10,opt,name=minResponseTokens,json=min_response_tokens,proto3" json:"minResponseTokens,omitempty"`
}

func (x *ChatParam) Reset() {
	*x = ChatParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatParam) ProtoMessage() {}

func (x *ChatParam) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatParam.ProtoReflect.Descriptor instead.
func (*ChatParam) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{1}
}

func (x *ChatParam) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatParam) GetMaxTokens() int32 {
	if x != nil {
		return x.MaxTokens
	}
	return 0
}

func (x *ChatParam) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ChatParam) GetTopP() float32 {
	if x != nil {
		return x.TopP
	}
	return 0
}

func (x *ChatParam) GetPresencePenalty() float32 {
	if x != nil {
		return x.PresencePenalty
	}
	return 0
}

func (x *ChatParam) GetFrequencyPenalty() float32 {
	if x != nil {
		return x.FrequencyPenalty
	}
	return 0
}

func (x *ChatParam) GetBotDesc() string {
	if x != nil {
		return x.BotDesc
	}
	return ""
}

func (x *ChatParam) GetContextTTL() int32 {
	if x != nil {
		return x.ContextTTL
	}
	return 0
}

func (x *ChatParam) GetContextLen() int32 {
	if x != nil {
		return x.ContextLen
	}
	return 0
}

func (x *ChatParam) GetMinResponseTokens() int32 {
	if x != nil {
		return x.MinResponseTokens
	}
	return 0
}

// 响应出参，非流式响应
type ChatCompletionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object  string                  `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Created int64                   `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Model   string                  `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Choices []*ChatCompletionChoice `protobuf:"bytes,5,rep,name=choices,proto3" json:"choices,omitempty"`
	Usage   *Usage                  `protobuf:"bytes,6,opt,name=usage,proto3" json:"usage,omitempty"`
}

func (x *ChatCompletionRes) Reset() {
	*x = ChatCompletionRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionRes) ProtoMessage() {}

func (x *ChatCompletionRes) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionRes.ProtoReflect.Descriptor instead.
func (*ChatCompletionRes) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{2}
}

func (x *ChatCompletionRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatCompletionRes) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ChatCompletionRes) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ChatCompletionRes) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatCompletionRes) GetChoices() []*ChatCompletionChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

func (x *ChatCompletionRes) GetUsage() *Usage {
	if x != nil {
		return x.Usage
	}
	return nil
}

type ChatCompletionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ChatCompletionMessage) Reset() {
	*x = ChatCompletionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionMessage) ProtoMessage() {}

func (x *ChatCompletionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionMessage.ProtoReflect.Descriptor instead.
func (*ChatCompletionMessage) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{3}
}

func (x *ChatCompletionMessage) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatCompletionMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatCompletionMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ChatCompletionChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        int32                  `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Message      *ChatCompletionMessage `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FinishReason string                 `protobuf:"bytes,3,opt,name=finishReason,json=finish_reason,proto3" json:"finishReason,omitempty"`
}

func (x *ChatCompletionChoice) Reset() {
	*x = ChatCompletionChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionChoice) ProtoMessage() {}

func (x *ChatCompletionChoice) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionChoice.ProtoReflect.Descriptor instead.
func (*ChatCompletionChoice) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{4}
}

func (x *ChatCompletionChoice) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ChatCompletionChoice) GetMessage() *ChatCompletionMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ChatCompletionChoice) GetFinishReason() string {
	if x != nil {
		return x.FinishReason
	}
	return ""
}

type Usage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PromptTokens     int32 `protobuf:"varint,1,opt,name=promptTokens,json=prompt_tokens,proto3" json:"promptTokens,omitempty"`
	CompletionTokens int32 `protobuf:"varint,2,opt,name=completionTokens,json=completion_tokens,proto3" json:"completionTokens,omitempty"`
	TotalTokens      int32 `protobuf:"varint,3,opt,name=totalTokens,json=total_tokens,proto3" json:"totalTokens,omitempty"`
}

func (x *Usage) Reset() {
	*x = Usage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Usage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Usage) ProtoMessage() {}

func (x *Usage) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Usage.ProtoReflect.Descriptor instead.
func (*Usage) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{5}
}

func (x *Usage) GetPromptTokens() int32 {
	if x != nil {
		return x.PromptTokens
	}
	return 0
}

func (x *Usage) GetCompletionTokens() int32 {
	if x != nil {
		return x.CompletionTokens
	}
	return 0
}

func (x *Usage) GetTotalTokens() int32 {
	if x != nil {
		return x.TotalTokens
	}
	return 0
}

// 消息响应结构，流式响应
type ChatCompletionStreamRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object  string                        `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Created int64                         `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Model   string                        `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	Choices []*ChatCompletionStreamChoice `protobuf:"bytes,5,rep,name=choices,proto3" json:"choices,omitempty"`
}

func (x *ChatCompletionStreamRes) Reset() {
	*x = ChatCompletionStreamRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamRes) ProtoMessage() {}

func (x *ChatCompletionStreamRes) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamRes.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamRes) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{6}
}

func (x *ChatCompletionStreamRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ChatCompletionStreamRes) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *ChatCompletionStreamRes) GetCreated() int64 {
	if x != nil {
		return x.Created
	}
	return 0
}

func (x *ChatCompletionStreamRes) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *ChatCompletionStreamRes) GetChoices() []*ChatCompletionStreamChoice {
	if x != nil {
		return x.Choices
	}
	return nil
}

type ChatCompletionStreamChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index        int32                      `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Delta        *ChatCompletionStreamDelta `protobuf:"bytes,2,opt,name=delta,proto3" json:"delta,omitempty"`
	FinishReason string                     `protobuf:"bytes,3,opt,name=finishReason,json=finish_reason,proto3" json:"finishReason,omitempty"`
}

func (x *ChatCompletionStreamChoice) Reset() {
	*x = ChatCompletionStreamChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamChoice) ProtoMessage() {}

func (x *ChatCompletionStreamChoice) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamChoice.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamChoice) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{7}
}

func (x *ChatCompletionStreamChoice) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ChatCompletionStreamChoice) GetDelta() *ChatCompletionStreamDelta {
	if x != nil {
		return x.Delta
	}
	return nil
}

func (x *ChatCompletionStreamChoice) GetFinishReason() string {
	if x != nil {
		return x.FinishReason
	}
	return ""
}

type ChatCompletionStreamDelta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Role    string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *ChatCompletionStreamDelta) Reset() {
	*x = ChatCompletionStreamDelta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatCompletionStreamDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatCompletionStreamDelta) ProtoMessage() {}

func (x *ChatCompletionStreamDelta) ProtoReflect() protoreflect.Message {
	mi := &file_chatgpt_services_proto_chatgpt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatCompletionStreamDelta.ProtoReflect.Descriptor instead.
func (*ChatCompletionStreamDelta) Descriptor() ([]byte, []int) {
	return file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP(), []int{8}
}

func (x *ChatCompletionStreamDelta) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatCompletionStreamDelta) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

var File_chatgpt_services_proto_chatgpt_proto protoreflect.FileDescriptor

var file_chatgpt_services_proto_chatgpt_proto_rawDesc = []byte{
	0x0a, 0x24, 0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xd9, 0x02, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x11, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x5f, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x0f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0xdc, 0x02, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x74, 0x6f, 0x70, 0x50,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x5f, 0x70, 0x12, 0x29, 0x0a,
	0x0f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x10, 0x66, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x11, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x70, 0x65,
	0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x07, 0x62, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x54, 0x54, 0x4c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x74,
	0x6c, 0x12, 0x1f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4c, 0x65, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c,
	0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x11, 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6d,
	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x22, 0xda, 0x01, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x3f, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x59, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x40, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x66,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x22, 0x7c, 0x0a, 0x05, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0xb8,
	0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x45, 0x0a, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x07, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x1a, 0x43, 0x68,
	0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x40,
	0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x5f, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x49, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x6c,
	0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65,
	0x2a, 0x49, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x07, 0x0a, 0x03, 0x57, 0x45, 0x42, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x51, 0x51, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x4f, 0x46, 0x46, 0x49, 0x43,
	0x41, 0x4c, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x45, 0x43, 0x4f, 0x4d, 0x10, 0x03, 0x12,
	0x0a, 0x0a, 0x06, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x04, 0x32, 0xdc, 0x01, 0x0a, 0x14,
	0x43, 0x68, 0x61, 0x74, 0x47, 0x50, 0x54, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x67, 0x70, 0x74,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x22, 0x00,
	0x12, 0x68, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x67,
	0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x67, 0x70, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x22, 0x00, 0x30, 0x01, 0x42, 0x17, 0x5a, 0x15, 0x63, 0x68,
	0x61, 0x74, 0x67, 0x70, 0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chatgpt_services_proto_chatgpt_proto_rawDescOnce sync.Once
	file_chatgpt_services_proto_chatgpt_proto_rawDescData = file_chatgpt_services_proto_chatgpt_proto_rawDesc
)

func file_chatgpt_services_proto_chatgpt_proto_rawDescGZIP() []byte {
	file_chatgpt_services_proto_chatgpt_proto_rawDescOnce.Do(func() {
		file_chatgpt_services_proto_chatgpt_proto_rawDescData = protoimpl.X.CompressGZIP(file_chatgpt_services_proto_chatgpt_proto_rawDescData)
	})
	return file_chatgpt_services_proto_chatgpt_proto_rawDescData
}

var file_chatgpt_services_proto_chatgpt_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chatgpt_services_proto_chatgpt_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chatgpt_services_proto_chatgpt_proto_goTypes = []interface{}{
	(ChatEndpoint)(0),                  // 0: chatgpt_service.ChatEndpoint
	(*ChatCompletionReq)(nil),          // 1: chatgpt_service.ChatCompletionReq
	(*ChatParam)(nil),                  // 2: chatgpt_service.ChatParam
	(*ChatCompletionRes)(nil),          // 3: chatgpt_service.ChatCompletionRes
	(*ChatCompletionMessage)(nil),      // 4: chatgpt_service.ChatCompletionMessage
	(*ChatCompletionChoice)(nil),       // 5: chatgpt_service.ChatCompletionChoice
	(*Usage)(nil),                      // 6: chatgpt_service.Usage
	(*ChatCompletionStreamRes)(nil),    // 7: chatgpt_service.ChatCompletionStreamRes
	(*ChatCompletionStreamChoice)(nil), // 8: chatgpt_service.ChatCompletionStreamChoice
	(*ChatCompletionStreamDelta)(nil),  // 9: chatgpt_service.ChatCompletionStreamDelta
}
var file_chatgpt_services_proto_chatgpt_proto_depIdxs = []int32{
	0, // 0: chatgpt_service.ChatCompletionReq.endpoint:type_name -> chatgpt_service.ChatEndpoint
	2, // 1: chatgpt_service.ChatCompletionReq.chatParam:type_name -> chatgpt_service.ChatParam
	5, // 2: chatgpt_service.ChatCompletionRes.choices:type_name -> chatgpt_service.ChatCompletionChoice
	6, // 3: chatgpt_service.ChatCompletionRes.usage:type_name -> chatgpt_service.Usage
	4, // 4: chatgpt_service.ChatCompletionChoice.message:type_name -> chatgpt_service.ChatCompletionMessage
	8, // 5: chatgpt_service.ChatCompletionStreamRes.choices:type_name -> chatgpt_service.ChatCompletionStreamChoice
	9, // 6: chatgpt_service.ChatCompletionStreamChoice.delta:type_name -> chatgpt_service.ChatCompletionStreamDelta
	1, // 7: chatgpt_service.ChatGPTServiceServer.ChatCompletion:input_type -> chatgpt_service.ChatCompletionReq
	1, // 8: chatgpt_service.ChatGPTServiceServer.ChatCompletionStream:input_type -> chatgpt_service.ChatCompletionReq
	3, // 9: chatgpt_service.ChatGPTServiceServer.ChatCompletion:output_type -> chatgpt_service.ChatCompletionRes
	7, // 10: chatgpt_service.ChatGPTServiceServer.ChatCompletionStream:output_type -> chatgpt_service.ChatCompletionStreamRes
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_chatgpt_services_proto_chatgpt_proto_init() }
func file_chatgpt_services_proto_chatgpt_proto_init() {
	if File_chatgpt_services_proto_chatgpt_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Usage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chatgpt_services_proto_chatgpt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatCompletionStreamDelta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chatgpt_services_proto_chatgpt_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chatgpt_services_proto_chatgpt_proto_goTypes,
		DependencyIndexes: file_chatgpt_services_proto_chatgpt_proto_depIdxs,
		EnumInfos:         file_chatgpt_services_proto_chatgpt_proto_enumTypes,
		MessageInfos:      file_chatgpt_services_proto_chatgpt_proto_msgTypes,
	}.Build()
	File_chatgpt_services_proto_chatgpt_proto = out.File
	file_chatgpt_services_proto_chatgpt_proto_rawDesc = nil
	file_chatgpt_services_proto_chatgpt_proto_goTypes = nil
	file_chatgpt_services_proto_chatgpt_proto_depIdxs = nil
}
